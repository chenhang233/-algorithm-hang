/**
 * @param {number[]} nums
 * @param {number} lower
 * @param {number} upper
 * @return {number}
 */
// 超时
var countFairPairsx = function (nums, lower, upper) {
  let n = nums.length
  let count = 0
  for (let i = 0; i < n; i++) {
    for (let j = i + 1; j < n; j++) {
      let t = nums[i] + nums[j]
      if (t >= lower && t <= upper) count++
    }
  }
  return count
}

/**
 * @param {number[]} nums
 * @param {number} lower
 * @param {number} upper
 * @return {number}
 */
var countFairPairs = function (nums, lower, upper) {
  nums.sort((a, b) => a - b)
  nums = nums.filter((v) => (lower > -1000000000 ? v > -1000000000 : v != null))
  let n = nums.length
  let count = 0
  for (let i = 0; i < n; i++) {
    for (let j = i + 1; j < n; j++) {
      let t = nums[i] + nums[j]
      if (t >= lower && t <= upper) count++
    }
  }
  //   console.log(count)
  return count
}

// countFairPairs([0, 1, 7, 4, 4, 5], 3, 6)
// countFairPairs([1, 7, 9, 2, 5], 11, 11)
// countFairPairs([-5, -7, -5, -7, -5], -12, -12)
countFairPairs([0, 0, 0, 0, 0, 0], -1000000000, 1000000000)
// countFairPairs(
//   [
//     12, 93, -90, -9, 75, -19, 3, -10, -93, -68, -97, 88, -90, 23, 36, -82, 24,
//     -54, -99, 40, 9, -10, -93, 20, 55, -60, 69, 3, 64, 52, -18, -60, 44, -97,
//     58, 97, 94, 76, 8, 87, 25, -2, -15, 23, -73, 64, 80, 19, 30, -67, -68, -32,
//     -10, 53, -88, -71, -26, -32, 21, 78, -33, -43, 35, -32, -84, -65, 63, 55,
//     -21, -85, 41, -98, 16, 39, -78, 74, 44, -77, 8, 74, 16, 41, -3, -7, -10, 29,
//     -28, -53, 48, 60, 6, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000,
//   ],
//   -124,
//   108
// )
// countFairPairs(
//   [
//     4, 43, 10, 87, 42, 33, -25, -74, 58, 83, 28, 68, 39, 15, 60, -24, -16, -40,
//     5, -15, 72, -63, 84, 32, -47, -78, 59, -25, 86, 83, 33, 6, 10, -62, 64, 69,
//     54, 64, 68, 97, 68, 42, 3, -37, -54, -90, -95, 76, 99, -95, -91, -96, 8, 85,
//     -99, -75, 74, -8, -5, -9, 24, 81, 10, -95, 9, -21, 84, 92, -28, -40, -39,
//     -27, 15, -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000, -1000000000, -1000000000,
//     -1000000000, -1000000000, -1000000000,
//   ],
//   -69,
//   79
// )

// 6355. 统计公平数对的数目
